/*! tailwindcss v4.0.12 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: Raleway, sans-serif;
    --font-mono: OCR A Std, monospace;
    --color-sky-700: oklch(0.5 0.134 242.749);
    --color-slate-50: oklch(0.984 0.003 247.858);
    --color-slate-100: oklch(0.968 0.007 247.896);
    --color-slate-300: oklch(0.869 0.022 252.894);
    --color-slate-400: oklch(0.704 0.04 256.788);
    --color-slate-500: oklch(0.554 0.046 257.417);
    --color-slate-600: oklch(0.446 0.043 257.281);
    --color-slate-700: oklch(0.372 0.044 257.287);
    --color-slate-800: oklch(0.279 0.041 260.031);
    --color-slate-900: oklch(0.208 0.042 265.755);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-700: oklch(0.373 0.034 259.733);
    --color-gray-800: oklch(0.278 0.033 256.848);
    --color-stone-50: oklch(0.985 0.001 106.423);
    --color-stone-200: oklch(0.923 0.003 48.717);
    --color-stone-300: oklch(0.869 0.005 56.366);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-lg: 32rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --leading-relaxed: 1.625;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --radius-4xl: 2rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-3xl: 64px;
    --aspect-video: 16 / 9;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    visibility: collapse;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-0 {
    margin-inline: calc(var(--spacing) * 0);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-6 {
    margin-inline: calc(var(--spacing) * 6);
  }
  .mx-8 {
    margin-inline: calc(var(--spacing) * 8);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-lead);
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      text-decoration: underline;
      font-weight: 500;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-weight: 400;
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.25em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-style: italic;
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "\201C""\201D""\2018""\2019";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 800;
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 900;
      color: inherit;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 700;
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 800;
      color: inherit;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }
    :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: block;
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-family: inherit;
      color: var(--tw-prose-kbd);
      box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-weight: 600;
      font-size: 0.875em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: "`";
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: "`";
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.9em;
    }
    :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      overflow-x: auto;
      font-weight: 400;
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      background-color: transparent;
      border-width: 0;
      border-radius: 0;
      padding: 0;
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: none;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: none;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      text-align: start;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    --tw-prose-body: oklch(0.373 0.034 259.733);
    --tw-prose-headings: oklch(0.21 0.034 264.665);
    --tw-prose-lead: oklch(0.446 0.03 256.802);
    --tw-prose-links: oklch(0.21 0.034 264.665);
    --tw-prose-bold: oklch(0.21 0.034 264.665);
    --tw-prose-counters: oklch(0.551 0.027 264.364);
    --tw-prose-bullets: oklch(0.872 0.01 258.338);
    --tw-prose-hr: oklch(0.928 0.006 264.531);
    --tw-prose-quotes: oklch(0.21 0.034 264.665);
    --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
    --tw-prose-captions: oklch(0.551 0.027 264.364);
    --tw-prose-kbd: oklch(0.21 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.034 264.665);
    --tw-prose-pre-code: oklch(0.928 0.006 264.531);
    --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
    --tw-prose-th-borders: oklch(0.872 0.01 258.338);
    --tw-prose-td-borders: oklch(0.928 0.006 264.531);
    --tw-prose-invert-body: oklch(0.872 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
    --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
    --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
    --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
    --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
    font-size: 1rem;
    line-height: 1.75;
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .table {
    display: table;
  }
  .aspect-video {
    aspect-ratio: var(--aspect-video);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-8\/10 {
    height: calc(8/10 * 100%);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-9\/10 {
    height: calc(9/10 * 100%);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-96 {
    height: calc(var(--spacing) * 96);
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-16 {
    max-height: calc(var(--spacing) * 16);
  }
  .max-h-20 {
    max-height: calc(var(--spacing) * 20);
  }
  .max-h-40 {
    max-height: calc(var(--spacing) * 40);
  }
  .max-h-46 {
    max-height: calc(var(--spacing) * 46);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-9\/10 {
    width: calc(9/10 * 100%);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-full {
    width: 100%;
  }
  .w-xs {
    width: var(--container-xs);
  }
  .max-w-none {
    max-width: none;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-1 {
    flex-basis: calc(var(--spacing) * 1);
  }
  .basis-1\/5 {
    flex-basis: calc(1/5 * 100%);
  }
  .basis-3 {
    flex-basis: calc(var(--spacing) * 3);
  }
  .basis-3\/10 {
    flex-basis: calc(3/10 * 100%);
  }
  .basis-4 {
    flex-basis: calc(var(--spacing) * 4);
  }
  .basis-4\/5 {
    flex-basis: calc(4/5 * 100%);
  }
  .basis-6 {
    flex-basis: calc(var(--spacing) * 6);
  }
  .basis-6\/10 {
    flex-basis: calc(6/10 * 100%);
  }
  .basis-10 {
    flex-basis: calc(var(--spacing) * 10);
  }
  .basis-10\/10 {
    flex-basis: calc(10/10 * 100%);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-top {
    transform-origin: top;
  }
  .scale-30 {
    --tw-scale-x: 30%;
    --tw-scale-y: 30%;
    --tw-scale-z: 30%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .gap-y-6 {
    row-gap: calc(var(--spacing) * 6);
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-scroll {
    overflow-x: scroll;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-4xl {
    border-radius: var(--radius-4xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-stone-50 {
    background-color: var(--color-stone-50);
  }
  .bg-stone-50\/25 {
    background-color: color-mix(in oklab, var(--color-stone-50) 25%, transparent);
  }
  .bg-stone-50\/50 {
    background-color: color-mix(in oklab, var(--color-stone-50) 50%, transparent);
  }
  .bg-stone-200 {
    background-color: var(--color-stone-200);
  }
  .bg-stone-200\/50 {
    background-color: color-mix(in oklab, var(--color-stone-200) 50%, transparent);
  }
  .bg-stone-300 {
    background-color: var(--color-stone-300);
  }
  .bg-linear-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-stone-50 {
    --tw-gradient-from: var(--color-stone-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-current {
    fill: currentColor;
  }
  .fill-slate-500 {
    fill: var(--color-slate-500);
  }
  .fill-slate-600 {
    fill: var(--color-slate-600);
  }
  .fill-slate-700 {
    fill: var(--color-slate-700);
  }
  .object-scale-down {
    object-fit: scale-down;
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }
  .pt-32 {
    padding-top: calc(var(--spacing) * 32);
  }
  .pt-40 {
    padding-top: calc(var(--spacing) * 40);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .pb-32 {
    padding-bottom: calc(var(--spacing) * 32);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .pl-7 {
    padding-left: calc(var(--spacing) * 7);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-left {
    text-align: left;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-2xl\/9 {
    font-size: var(--text-2xl);
    line-height: calc(var(--spacing) * 9);
  }
  .text-2xl\/10 {
    font-size: var(--text-2xl);
    line-height: calc(var(--spacing) * 10);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-3xl\/11 {
    font-size: var(--text-3xl);
    line-height: calc(var(--spacing) * 11);
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-4xl\/12 {
    font-size: var(--text-4xl);
    line-height: calc(var(--spacing) * 12);
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-lg\/8 {
    font-size: var(--text-lg);
    line-height: calc(var(--spacing) * 8);
  }
  .text-lg\/9 {
    font-size: var(--text-lg);
    line-height: calc(var(--spacing) * 9);
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xl\/7 {
    font-size: var(--text-xl);
    line-height: calc(var(--spacing) * 7);
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-\[\.32em\] {
    --tw-tracking: .32em;
    letter-spacing: .32em;
  }
  .text-\[\#000000\] {
    color: #000000;
  }
  .text-\[\#1C3C3C\] {
    color: #1C3C3C;
  }
  .text-\[\#008de4\] {
    color: #008de4;
  }
  .text-\[\#38bdf8\] {
    color: #38bdf8;
  }
  .text-\[\#0081fb\] {
    color: #0081fb;
  }
  .text-\[\#0088da\] {
    color: #0088da;
  }
  .text-\[\#0089D6\] {
    color: #0089D6;
  }
  .text-\[\#107c41\] {
    color: #107c41;
  }
  .text-\[\#195f92\] {
    color: #195f92;
  }
  .text-\[\#276dc2\] {
    color: #276dc2;
  }
  .text-\[\#2088ff\] {
    color: #2088ff;
  }
  .text-\[\#2681FF\] {
    color: #2681FF;
  }
  .text-\[\#2965f1\] {
    color: #2965f1;
  }
  .text-\[\#4285f4\] {
    color: #4285f4;
  }
  .text-\[\#4584b6\] {
    color: #4584b6;
  }
  .text-\[\#336791\] {
    color: #336791;
  }
  .text-\[\#589632\] {
    color: #589632;
  }
  .text-\[\#BD4043\] {
    color: #BD4043;
  }
  .text-\[\#F97700\] {
    color: #F97700;
  }
  .text-\[\#c74634\] {
    color: #c74634;
  }
  .text-\[\#e9b51c\] {
    color: #e9b51c;
  }
  .text-\[\#e15919\] {
    color: #e15919;
  }
  .text-\[\#ee4c2c\] {
    color: #ee4c2c;
  }
  .text-\[\#f06e3e\] {
    color: #f06e3e;
  }
  .text-\[\#f1502f\] {
    color: #f1502f;
  }
  .text-\[\#f06529\] {
    color: #f06529;
  }
  .text-\[\#f80000\] {
    color: #f80000;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-slate-500 {
    color: var(--color-slate-500);
  }
  .text-slate-600 {
    color: var(--color-slate-600);
  }
  .text-slate-700 {
    color: var(--color-slate-700);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .underline {
    text-decoration-line: underline;
  }
  .underline-offset-5 {
    text-underline-offset: 5px;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .max-xl\:flex-col {
    @media (width < 80rem) {
      flex-direction: column;
    }
  }
  .max-lg\:flex-col {
    @media (width < 64rem) {
      flex-direction: column;
    }
  }
  .max-md\:max-w-9\/10 {
    @media (width < 48rem) {
      max-width: calc(9/10 * 100%);
    }
  }
  .max-md\:flex-col {
    @media (width < 48rem) {
      flex-direction: column;
    }
  }
  .max-sm\:absolute {
    @media (width < 40rem) {
      position: absolute;
    }
  }
  .max-sm\:bottom-0 {
    @media (width < 40rem) {
      bottom: calc(var(--spacing) * 0);
    }
  }
  .max-sm\:hidden {
    @media (width < 40rem) {
      display: none;
    }
  }
  .max-sm\:h-full {
    @media (width < 40rem) {
      height: 100%;
    }
  }
  .max-sm\:flex-col {
    @media (width < 40rem) {
      flex-direction: column;
    }
  }
  .min-\[2000px\]\:mx-60 {
    @media (width >= 2000px) {
      margin-inline: calc(var(--spacing) * 60);
    }
  }
  .min-\[2000px\]\:mx-72 {
    @media (width >= 2000px) {
      margin-inline: calc(var(--spacing) * 72);
    }
  }
  .sm\:mx-12 {
    @media (width >= 40rem) {
      margin-inline: calc(var(--spacing) * 12);
    }
  }
  .sm\:mx-14 {
    @media (width >= 40rem) {
      margin-inline: calc(var(--spacing) * 14);
    }
  }
  .sm\:mr-1 {
    @media (width >= 40rem) {
      margin-right: calc(var(--spacing) * 1);
    }
  }
  .sm\:mr-10 {
    @media (width >= 40rem) {
      margin-right: calc(var(--spacing) * 10);
    }
  }
  .sm\:ml-2 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 2);
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:h-6 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 6);
    }
  }
  .sm\:h-7 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 7);
    }
  }
  .sm\:h-8 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 8);
    }
  }
  .sm\:h-9\/10 {
    @media (width >= 40rem) {
      height: calc(9/10 * 100%);
    }
  }
  .sm\:h-full {
    @media (width >= 40rem) {
      height: 100%;
    }
  }
  .sm\:w-6 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 6);
    }
  }
  .sm\:w-7 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 7);
    }
  }
  .sm\:w-7\/10 {
    @media (width >= 40rem) {
      width: calc(7/10 * 100%);
    }
  }
  .sm\:w-8 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 8);
    }
  }
  .sm\:w-lg {
    @media (width >= 40rem) {
      width: var(--container-lg);
    }
  }
  .sm\:basis-4\/10 {
    @media (width >= 40rem) {
      flex-basis: calc(4/10 * 100%);
    }
  }
  .sm\:flex-col {
    @media (width >= 40rem) {
      flex-direction: column;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:items-start {
    @media (width >= 40rem) {
      align-items: flex-start;
    }
  }
  .sm\:gap-y-2 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 2);
    }
  }
  .sm\:gap-y-8 {
    @media (width >= 40rem) {
      row-gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:p-16 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 16);
    }
  }
  .sm\:px-3 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .sm\:px-10 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .sm\:py-8 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .sm\:pt-0 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .sm\:pt-6 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 6);
    }
  }
  .sm\:pt-10 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 10);
    }
  }
  .sm\:pt-18 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 18);
    }
  }
  .sm\:pt-46 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 46);
    }
  }
  .sm\:pr-4 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 4);
    }
  }
  .sm\:pr-8 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .sm\:pb-0 {
    @media (width >= 40rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .sm\:pb-6 {
    @media (width >= 40rem) {
      padding-bottom: calc(var(--spacing) * 6);
    }
  }
  .sm\:pl-12 {
    @media (width >= 40rem) {
      padding-left: calc(var(--spacing) * 12);
    }
  }
  .sm\:text-2xl\/9 {
    @media (width >= 40rem) {
      font-size: var(--text-2xl);
      line-height: calc(var(--spacing) * 9);
    }
  }
  .sm\:text-2xl\/11 {
    @media (width >= 40rem) {
      font-size: var(--text-2xl);
      line-height: calc(var(--spacing) * 11);
    }
  }
  .sm\:text-3xl\/10 {
    @media (width >= 40rem) {
      font-size: var(--text-3xl);
      line-height: calc(var(--spacing) * 10);
    }
  }
  .sm\:text-4xl {
    @media (width >= 40rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .sm\:text-4xl\/12 {
    @media (width >= 40rem) {
      font-size: var(--text-4xl);
      line-height: calc(var(--spacing) * 12);
    }
  }
  .sm\:text-5xl\/11 {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: calc(var(--spacing) * 11);
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-lg {
    @media (width >= 40rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .sm\:text-xl\/9 {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: calc(var(--spacing) * 9);
    }
  }
  .sm\:text-slate-700 {
    @media (width >= 40rem) {
      color: var(--color-slate-700);
    }
  }
  .md\:mt-5 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 5);
    }
  }
  .md\:mb-0 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .md\:max-h-54 {
    @media (width >= 48rem) {
      max-height: calc(var(--spacing) * 54);
    }
  }
  .md\:basis-1\/5 {
    @media (width >= 48rem) {
      flex-basis: calc(1/5 * 100%);
    }
  }
  .md\:basis-4\/5 {
    @media (width >= 48rem) {
      flex-basis: calc(4/5 * 100%);
    }
  }
  .md\:text-right {
    @media (width >= 48rem) {
      text-align: right;
    }
  }
  .lg\:mx-20 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * 20);
    }
  }
  .lg\:mx-24 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * 24);
    }
  }
  .lg\:h-10 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 10);
    }
  }
  .lg\:max-h-60 {
    @media (width >= 64rem) {
      max-height: calc(var(--spacing) * 60);
    }
  }
  .lg\:w-10 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 10);
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:gap-4 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .lg\:py-2 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .lg\:pb-0 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:hover\:font-bold {
    @media (width >= 64rem) {
      &:hover {
        @media (hover: hover) {
          --tw-font-weight: var(--font-weight-bold);
          font-weight: var(--font-weight-bold);
        }
      }
    }
  }
  .xl\:col-start-2 {
    @media (width >= 80rem) {
      grid-column-start: 2;
    }
  }
  .xl\:col-start-11 {
    @media (width >= 80rem) {
      grid-column-start: 11;
    }
  }
  .xl\:col-end-11 {
    @media (width >= 80rem) {
      grid-column-end: 11;
    }
  }
  .xl\:col-end-14 {
    @media (width >= 80rem) {
      grid-column-end: 14;
    }
  }
  .xl\:block {
    @media (width >= 80rem) {
      display: block;
    }
  }
  .xl\:grid {
    @media (width >= 80rem) {
      display: grid;
    }
  }
  .xl\:hidden {
    @media (width >= 80rem) {
      display: none;
    }
  }
  .xl\:max-h-40 {
    @media (width >= 80rem) {
      max-height: calc(var(--spacing) * 40);
    }
  }
  .xl\:max-h-64 {
    @media (width >= 80rem) {
      max-height: calc(var(--spacing) * 64);
    }
  }
  .xl\:flex-none {
    @media (width >= 80rem) {
      flex: none;
    }
  }
  .xl\:basis-7\/10 {
    @media (width >= 80rem) {
      flex-basis: calc(7/10 * 100%);
    }
  }
  .xl\:grid-cols-16 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(16, minmax(0, 1fr));
    }
  }
  .xl\:content-center {
    @media (width >= 80rem) {
      align-content: center;
    }
  }
  .xl\:px-12 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .xl\:pt-0 {
    @media (width >= 80rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .xl\:pt-6 {
    @media (width >= 80rem) {
      padding-top: calc(var(--spacing) * 6);
    }
  }
  .xl\:pb-8 {
    @media (width >= 80rem) {
      padding-bottom: calc(var(--spacing) * 8);
    }
  }
  .xl\:text-3xl\/11 {
    @media (width >= 80rem) {
      font-size: var(--text-3xl);
      line-height: calc(var(--spacing) * 11);
    }
  }
  .xl\:text-8xl {
    @media (width >= 80rem) {
      font-size: var(--text-8xl);
      line-height: var(--tw-leading, var(--text-8xl--line-height));
    }
  }
  .\32 xl\:mt-0 {
    @media (width >= 96rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .\32 xl\:block {
    @media (width >= 96rem) {
      display: block;
    }
  }
  .\32 xl\:h-28 {
    @media (width >= 96rem) {
      height: calc(var(--spacing) * 28);
    }
  }
  .\32 xl\:max-h-80 {
    @media (width >= 96rem) {
      max-height: calc(var(--spacing) * 80);
    }
  }
  .\32 xl\:w-28 {
    @media (width >= 96rem) {
      width: calc(var(--spacing) * 28);
    }
  }
  .\32 xl\:text-slate-50 {
    @media (width >= 96rem) {
      color: var(--color-slate-50);
    }
  }
  .\32 xl\:opacity-0 {
    @media (width >= 96rem) {
      opacity: 0%;
    }
  }
  .\32 xl\:group-hover\:fill-slate-600 {
    @media (width >= 96rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-slate-600);
        }
      }
    }
  }
  .\32 xl\:group-hover\:fill-slate-700 {
    @media (width >= 96rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-slate-700);
        }
      }
    }
  }
  .\32 xl\:group-hover\:font-bold {
    @media (width >= 96rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          --tw-font-weight: var(--font-weight-bold);
          font-weight: var(--font-weight-bold);
        }
      }
    }
  }
  .\32 xl\:group-hover\:text-slate-600 {
    @media (width >= 96rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-slate-600);
        }
      }
    }
  }
  .\32 xl\:group-hover\:text-white {
    @media (width >= 96rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .\32 xl\:group-hover\:opacity-100 {
    @media (width >= 96rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          opacity: 100%;
        }
      }
    }
  }
  .\32 xl\:hover\:scale-105 {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 105%;
          --tw-scale-y: 105%;
          --tw-scale-z: 105%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#000000\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #000000;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#1C3C3C\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #1C3C3C;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#07bed3\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #07bed3;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#7DB0BC\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #7DB0BC;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#7e3d8f\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #7e3d8f;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#008de4\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #008de4;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#009a5b\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #009a5b;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#9b4600\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #9b4600;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#38bdf8\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #38bdf8;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#0081fb\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #0081fb;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#0088da\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #0088da;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#0089D6\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #0089D6;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#107c41\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #107c41;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#195f92\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #195f92;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#276dc2\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #276dc2;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#2088ff\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #2088ff;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#2681FF\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #2681FF;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#2965f1\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #2965f1;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#4285f4\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #4285f4;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#4584b6\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #4584b6;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#336791\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #336791;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#589632\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #589632;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#BD4043\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #BD4043;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#F97700\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #F97700;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#cc5745\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #cc5745;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#e9b51c\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #e9b51c;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#e15919\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #e15919;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#ee4c2c\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #ee4c2c;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#f06e3e\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #f06e3e;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#f1502f\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #f1502f;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#f06529\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #f06529;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#f80000\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #f80000;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-\[\#ffd21e\] {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: #ffd21e;
        }
      }
    }
  }
  .\32 xl\:hover\:bg-black {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-black);
        }
      }
    }
  }
  .\32 xl\:hover\:text-slate-600 {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-slate-600);
        }
      }
    }
  }
  .\32 xl\:hover\:shadow-md {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .\32 xl\:hover\:duration-300 {
    @media (width >= 96rem) {
      &:hover {
        @media (hover: hover) {
          --tw-duration: 300ms;
          transition-duration: 300ms;
        }
      }
    }
  }
  .dark\:bg-gray-700\/50 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
    }
  }
  .dark\:bg-slate-700\/25 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in oklab, var(--color-slate-700) 25%, transparent);
    }
  }
  .dark\:bg-slate-700\/50 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in oklab, var(--color-slate-700) 50%, transparent);
    }
  }
  .dark\:bg-slate-800\/50 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in oklab, var(--color-slate-800) 50%, transparent);
    }
  }
  .dark\:bg-slate-900 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-slate-900);
    }
  }
  .dark\:from-sky-700 {
    @media (prefers-color-scheme: dark) {
      --tw-gradient-from: var(--color-sky-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:fill-slate-500 {
    @media (prefers-color-scheme: dark) {
      fill: var(--color-slate-500);
    }
  }
  .dark\:fill-slate-600 {
    @media (prefers-color-scheme: dark) {
      fill: var(--color-slate-600);
    }
  }
  .dark\:text-gray-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-slate-300 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-slate-300);
    }
  }
  .dark\:text-slate-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-slate-400);
    }
  }
  .dark\:text-slate-500 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-slate-500);
    }
  }
  .dark\:text-slate-600 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-slate-600);
    }
  }
  .dark\:opacity-90 {
    @media (prefers-color-scheme: dark) {
      opacity: 90%;
    }
  }
  .dark\:hover\:fill-slate-100 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          fill: var(--color-slate-100);
        }
      }
    }
  }
  .dark\:xl\:group-hover\:fill-gray-800 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 80rem) {
        &:is(:where(.group):hover *) {
          @media (hover: hover) {
            fill: var(--color-gray-800);
          }
        }
      }
    }
  }
  .dark\:xl\:group-hover\:fill-slate-600 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 80rem) {
        &:is(:where(.group):hover *) {
          @media (hover: hover) {
            fill: var(--color-slate-600);
          }
        }
      }
    }
  }
  .dark\:xl\:group-hover\:fill-white {
    @media (prefers-color-scheme: dark) {
      @media (width >= 80rem) {
        &:is(:where(.group):hover *) {
          @media (hover: hover) {
            fill: var(--color-white);
          }
        }
      }
    }
  }
  .\32 xl\:dark\:text-slate-50 {
    @media (width >= 96rem) {
      @media (prefers-color-scheme: dark) {
        color: var(--color-slate-50);
      }
    }
  }
  .\32 xl\:dark\:opacity-0 {
    @media (width >= 96rem) {
      @media (prefers-color-scheme: dark) {
        opacity: 0%;
      }
    }
  }
  .dark\:2xl\:group-hover\:dark\:fill-slate-400 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 96rem) {
        &:is(:where(.group):hover *) {
          @media (hover: hover) {
            @media (prefers-color-scheme: dark) {
              fill: var(--color-slate-400);
            }
          }
        }
      }
    }
  }
  .dark\:2xl\:group-hover\:fill-slate-300 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 96rem) {
        &:is(:where(.group):hover *) {
          @media (hover: hover) {
            fill: var(--color-slate-300);
          }
        }
      }
    }
  }
  .dark\:2xl\:group-hover\:dark\:text-slate-400 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 96rem) {
        &:is(:where(.group):hover *) {
          @media (hover: hover) {
            @media (prefers-color-scheme: dark) {
              color: var(--color-slate-400);
            }
          }
        }
      }
    }
  }
  .dark\:2xl\:group-hover\:text-slate-300 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 96rem) {
        &:is(:where(.group):hover *) {
          @media (hover: hover) {
            color: var(--color-slate-300);
          }
        }
      }
    }
  }
  .dark\:2xl\:group-hover\:opacity-100 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 96rem) {
        &:is(:where(.group):hover *) {
          @media (hover: hover) {
            opacity: 100%;
          }
        }
      }
    }
  }
  .dark\:2xl\:hover\:text-slate-100 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 96rem) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-slate-100);
          }
        }
      }
    }
  }
  .prose-headings\:text-slate-700 {
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-slate-700);
    }
  }
  .prose-headings\:dark\:text-slate-300 {
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (prefers-color-scheme: dark) {
        color: var(--color-slate-300);
      }
    }
  }
  .prose-h1\:text-center {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-align: center;
    }
  }
  .prose-h1\:text-3xl\/9 {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-3xl);
      line-height: calc(var(--spacing) * 9);
    }
  }
  .prose-h1\:font-medium {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .prose-h1\:italic {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-style: italic;
    }
  }
  .prose-h1\:sm\:text-4xl\/10 {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (width >= 40rem) {
        font-size: var(--text-4xl);
        line-height: calc(var(--spacing) * 10);
      }
    }
  }
  .prose-p\:text-justify {
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-align: justify;
    }
  }
  .prose-p\:text-xl\/8 {
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-xl);
      line-height: calc(var(--spacing) * 8);
    }
  }
  .prose-p\:font-normal {
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .prose-p\:text-slate-600 {
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-slate-600);
    }
  }
  .prose-p\:sm\:text-2xl\/9 {
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (width >= 40rem) {
        font-size: var(--text-2xl);
        line-height: calc(var(--spacing) * 9);
      }
    }
  }
  .prose-p\:dark\:text-slate-400 {
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (prefers-color-scheme: dark) {
        color: var(--color-slate-400);
      }
    }
  }
  .prose-a\:font-normal {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .prose-a\:text-slate-600 {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-slate-600);
    }
  }
  .prose-a\:italic {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-style: italic;
    }
  }
  .prose-a\:hover\:font-semibold {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:hover {
        @media (hover: hover) {
          --tw-font-weight: var(--font-weight-semibold);
          font-weight: var(--font-weight-semibold);
        }
      }
    }
  }
  .prose-a\:dark\:text-slate-400 {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (prefers-color-scheme: dark) {
        color: var(--color-slate-400);
      }
    }
  }
  .prose-blockquote\:border-slate-600 {
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-color: var(--color-slate-600);
    }
  }
  .prose-blockquote\:dark\:text-slate-400 {
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (prefers-color-scheme: dark) {
        color: var(--color-slate-400);
      }
    }
  }
  .prose-strong\:text-slate-700 {
    & :is(:where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-slate-700);
    }
  }
  .prose-strong\:dark\:text-slate-300 {
    & :is(:where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (prefers-color-scheme: dark) {
        color: var(--color-slate-300);
      }
    }
  }
  .prose-ul\:list-disc {
    & :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      list-style-type: disc;
    }
  }
  .prose-ul\:marker\:text-slate-600 {
    & :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      & *::marker {
        color: var(--color-slate-600);
      }
      &::marker {
        color: var(--color-slate-600);
      }
    }
  }
  .prose-ul\:dark\:marker\:text-slate-400 {
    & :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (prefers-color-scheme: dark) {
        & *::marker {
          color: var(--color-slate-400);
        }
        &::marker {
          color: var(--color-slate-400);
        }
      }
    }
  }
  .prose-li\:text-justify {
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-align: justify;
    }
  }
  .prose-li\:text-lg\/8 {
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-lg);
      line-height: calc(var(--spacing) * 8);
    }
  }
  .prose-li\:font-normal {
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .prose-li\:text-slate-600 {
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-slate-600);
    }
  }
  .prose-li\:sm\:text-xl\/9 {
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (width >= 40rem) {
        font-size: var(--text-xl);
        line-height: calc(var(--spacing) * 9);
      }
    }
  }
  .prose-li\:dark\:text-slate-400 {
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (prefers-color-scheme: dark) {
        color: var(--color-slate-400);
      }
    }
  }
  .prose-img\:my-0 {
    & :is(:where(img):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-block: calc(var(--spacing) * 0);
    }
  }
  .prose-img\:w-9\/10 {
    & :is(:where(img):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      width: calc(9/10 * 100%);
    }
  }
  .prose-img\:rounded-2xl {
    & :is(:where(img):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-radius: var(--radius-2xl);
    }
  }
  .prose-img\:sm\:w-7\/10 {
    & :is(:where(img):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      @media (width >= 40rem) {
        width: calc(7/10 * 100%);
      }
    }
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}
body {
  scroll-behavior: smooth;
}
@layer utilities {
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
